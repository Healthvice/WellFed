- name: Continuous Integration
  hosts: "localhost"
  connection: local

  tasks:
  
  - set_fact:
      git_username: "{{ lookup('env', 'git_username') }}"
      git_password: "{{ lookup('env', 'git_password') }}"
      subscription_id: "{{ lookup('env', 'subscription_id') }}"
      service_principal_id: "{{ lookup('env', 'service_principal_id') }}"
      service_principal_secret: "{{ lookup('env', 'service_principal_secret') }}"
      acr_regisroty_url: "{{ lookup('env', 'acr_registory_url') }}"
      acr_username: "{{ lookup('env', 'acr_username') }}"
      tenant_id: "{{ lookup('env', 'tenant_id') }}"
      service_name: "{{ lookup('env', 'service_name') }}"
      source_dir: "{{ lookup('env', 'source_dir') }}"
      # env_dir: "{{ lookup('env', 'env_dir') }}"

  - name: Login to Azure using Service Principle
    command: >
      az login
      --service-principal
      --username '{{ service_principal_id }}'
      --password '{{ service_principal_secret }}'
      --tenant '{{ tenant_id }}'

  - name: set subscription to current dir
    command: az account set --subscription {{ subscription_id }}

  - name: Login to ACR registory
    shell: echo "{{ service_principal_secret }}" | docker login wellfeddev.azurecr.io --username "{{ service_principal_id }}" --password-stdin

  - name: Install npm dependencies
    command: npm install
    args:
      chdir: "{{ source_dir }}/frontend/wellfed"

  #- name: Build the project
    #command: npm run dev
    #args:
     # chdir: "{{ source_dir }}/frontend/wellfed"

  #- name: Setup .env file
    #template:
      #src: "{{ source_dir }}/frontend/wellfed/cicd/ansible/templates/.env.j2"
      #dest: "{{ source_dir }}/frontend/wellfed/.env"

  #- name: Publish Artifact to npm registry
    #command: npm publish
    #args:
      #chdir: "{{ source_dir }}/frontend/wellfed"
  - name: Set version variable from package.json
    set_fact:
      version: "{{ lookup('file', '{{ source_dir }}/frontend/wellfed/package.json') | from_json | json_query('version') }}"
      imagelabel: "{{ lookup('file', '{{ source_dir }}/frontend/wellfed/package.json') | from_json | json_query('version') }}"  # Map version to imagelabel

  - name: Build docker image
    command: docker build -t {{ service_name }} .
    args:
      chdir: "{{ source_dir }}/frontend/wellfed"

  - name: Tag docker image
    command: docker tag {{ service_name }} {{ acr_username }}/{{ service_name }}:{{ imagelabel }}

  - name: Push image to acr registory
    command: docker push wellfeddev.azurecr.io/{{ service_name }}:{{ imagelabel }}
