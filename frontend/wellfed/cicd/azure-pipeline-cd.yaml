steps:
  - script: |
      echo "Version: $(version)"
      VERSION=$(Build.SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)
      echo "VERSION: $VERSION"
    displayName: "Debug Version Parameter"

  - task: Bash@3
    displayName: "Build and Push Docker Image"
    inputs:
      targetType: 'inline'
      script: |
        set -e  # Exit on error
        echo "Building and pushing Docker image..."
        docker build -t wellfeddev.azurecr.io/wellfed-frontend:$VERSION -f frontend/wellfed/Dockerfile frontend/wellfed
        docker push wellfeddev.azurecr.io/wellfed-frontend:$VERSION
    env:
      AZURE_CREDENTIALS: $(azureServiceConnection)
      VERSION: $(Build.SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)

  - task: Bash@3
    displayName: "Run Ansible Playbook"
    inputs:
      targetType: 'inline'
      script: |
        set -e  # Exit on error
        echo "Current Directory:"
        pwd
        VERSION=$(Build.SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)
        echo "VERSION: $VERSION"  # Debug version parameter
        cd ${source_dir}/frontend/wellfed
        echo "Current Directory after changing:"
        pwd
        echo "Directory Listing:"
        ls -lrt
        echo "Running Ansible Playbook:"
        ansible-playbook cicd/ansible/cd.yaml -i "localhost," -e version=$VERSION -v
    env:
      git_username: "$(git_username)"
      git_password: "$(git_password)"
      subscription_id: "$(subscription_id)"
      service_principal_id: "$(service_principal_id)"
      service_principal_secret: "$(service_principal_secret)"
      acr_regisroty_url: "$(acr_regisroty_url)"
      acr_username: "$(acr_username)"
      tenant_id: "$(tenant_id)"
      service_name: "$(service_name)"
      source_dir: "$(Build.SourcesDirectory)"
      aks_cluster: "$(aks_cluster)"
      resource_group: "$(resource_group)"
      version: $(Build.SourceBranchName)-$(Date:yyyyMMdd)$(Rev:.r)
